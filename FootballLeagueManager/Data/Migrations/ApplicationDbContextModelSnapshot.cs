// <auto-generated />
using System;
using FootballLeagueManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FootballLeagueManager.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FootballLeagueManager.Models.Entities.Main.FavoriteTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FavoriteTeams");
                });

            modelBuilder.Entity("FootballLeagueManager.Models.Entities.Main.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leagues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://assets.skor.id/crop/0x0:0x0/x/photo/2020/04/02/574196038.jpg",
                            Name = "Jupiler League"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://statics-maker.llt-services.com/prl/images/2023/09/28/xlarge/deac0d81-f6a8-41ed-bdd8-794da335dd68.png",
                            Name = "Challenger Pro League"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://static.vecteezy.com/system/resources/previews/010/994/451/non_2x/premier-league-logo-symbol-with-name-design-england-football-european-countries-football-teams-illustration-with-purple-background-free-vector.jpg",
                            Name = "Premier League"
                        });
                });

            modelBuilder.Entity("FootballLeagueManager.Models.Entities.Main.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AwayTeamGoals")
                        .HasColumnType("int");

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HomeTeamGoals")
                        .HasColumnType("int");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<int>("Queue")
                        .HasColumnType("int");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwayTeamGoals = 2,
                            AwayTeamId = 1,
                            Date = new DateTime(2023, 4, 23, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 9,
                            Queue = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 2,
                            AwayTeamGoals = 2,
                            AwayTeamId = 11,
                            Date = new DateTime(2023, 4, 16, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 5,
                            HomeTeamId = 1,
                            Queue = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 3,
                            AwayTeamGoals = 0,
                            AwayTeamId = 1,
                            Date = new DateTime(2023, 4, 9, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 6,
                            Queue = 2,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 4,
                            AwayTeamGoals = 1,
                            AwayTeamId = 10,
                            Date = new DateTime(2023, 4, 2, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 1,
                            Queue = 2,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 5,
                            AwayTeamGoals = 1,
                            AwayTeamId = 1,
                            Date = new DateTime(2023, 3, 17, 20, 45, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 8,
                            Queue = 2,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 6,
                            AwayTeamGoals = 4,
                            AwayTeamId = 2,
                            Date = new DateTime(2023, 4, 23, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 14,
                            Queue = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 7,
                            AwayTeamGoals = 1,
                            AwayTeamId = 18,
                            Date = new DateTime(2023, 4, 16, 19, 15, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 2,
                            Queue = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 8,
                            AwayTeamGoals = 1,
                            AwayTeamId = 2,
                            Date = new DateTime(2023, 4, 8, 20, 45, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 1,
                            Queue = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 9,
                            AwayTeamGoals = 1,
                            AwayTeamId = 12,
                            Date = new DateTime(2023, 4, 2, 19, 15, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 2,
                            Queue = 2,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 10,
                            AwayTeamGoals = 1,
                            AwayTeamId = 13,
                            Date = new DateTime(2023, 3, 19, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 2,
                            Queue = 2,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 11,
                            AwayTeamGoals = 1,
                            AwayTeamId = 3,
                            Date = new DateTime(2023, 4, 23, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 0,
                            HomeTeamId = 12,
                            Queue = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 12,
                            AwayTeamGoals = 0,
                            AwayTeamId = 14,
                            Date = new DateTime(2023, 4, 16, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 3,
                            Queue = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 13,
                            AwayTeamGoals = 1,
                            AwayTeamId = 8,
                            Date = new DateTime(2023, 4, 9, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 3,
                            Queue = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 14,
                            AwayTeamGoals = 2,
                            AwayTeamId = 3,
                            Date = new DateTime(2023, 3, 31, 20, 45, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 0,
                            HomeTeamId = 17,
                            Queue = 2,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 15,
                            AwayTeamGoals = 1,
                            AwayTeamId = 9,
                            Date = new DateTime(2023, 3, 19, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 0,
                            HomeTeamId = 3,
                            Queue = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 16,
                            AwayTeamGoals = 0,
                            AwayTeamId = 15,
                            Date = new DateTime(2023, 4, 23, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 7,
                            HomeTeamId = 4,
                            Queue = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 17,
                            AwayTeamGoals = 0,
                            AwayTeamId = 20,
                            Date = new DateTime(2023, 2, 12, 19, 15, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 19,
                            Queue = 1,
                            SeasonId = 2
                        },
                        new
                        {
                            Id = 18,
                            AwayTeamGoals = 0,
                            AwayTeamId = 22,
                            Date = new DateTime(2022, 5, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 21,
                            Queue = 1,
                            SeasonId = 3
                        },
                        new
                        {
                            Id = 19,
                            AwayTeamGoals = 2,
                            AwayTeamId = 21,
                            Date = new DateTime(2022, 5, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 23,
                            Queue = 1,
                            SeasonId = 3
                        },
                        new
                        {
                            Id = 20,
                            AwayTeamGoals = 0,
                            AwayTeamId = 23,
                            Date = new DateTime(2022, 4, 22, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 22,
                            Queue = 1,
                            SeasonId = 3
                        },
                        new
                        {
                            Id = 21,
                            AwayTeamGoals = 2,
                            AwayTeamId = 22,
                            Date = new DateTime(2022, 5, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 24,
                            Queue = 1,
                            SeasonId = 3
                        },
                        new
                        {
                            Id = 22,
                            AwayTeamGoals = 0,
                            AwayTeamId = 24,
                            Date = new DateTime(2022, 5, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 3,
                            HomeTeamId = 23,
                            Queue = 1,
                            SeasonId = 3
                        },
                        new
                        {
                            Id = 23,
                            AwayTeamGoals = 2,
                            AwayTeamId = 23,
                            Date = new DateTime(2022, 5, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 25,
                            Queue = 1,
                            SeasonId = 3
                        },
                        new
                        {
                            Id = 24,
                            AwayTeamGoals = 0,
                            AwayTeamId = 26,
                            Date = new DateTime(2022, 5, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 25,
                            Queue = 2,
                            SeasonId = 3
                        },
                        new
                        {
                            Id = 25,
                            AwayTeamGoals = 0,
                            AwayTeamId = 25,
                            Date = new DateTime(2022, 5, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 3,
                            HomeTeamId = 24,
                            Queue = 1,
                            SeasonId = 3
                        },
                        new
                        {
                            Id = 26,
                            AwayTeamGoals = 1,
                            AwayTeamId = 22,
                            Date = new DateTime(2022, 5, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 21,
                            Queue = 1,
                            SeasonId = 4
                        },
                        new
                        {
                            Id = 27,
                            AwayTeamGoals = 3,
                            AwayTeamId = 21,
                            Date = new DateTime(2022, 5, 22, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 23,
                            Queue = 1,
                            SeasonId = 4
                        },
                        new
                        {
                            Id = 28,
                            AwayTeamGoals = 0,
                            AwayTeamId = 23,
                            Date = new DateTime(2022, 4, 22, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 22,
                            Queue = 1,
                            SeasonId = 4
                        },
                        new
                        {
                            Id = 29,
                            AwayTeamGoals = 3,
                            AwayTeamId = 22,
                            Date = new DateTime(2022, 5, 22, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 24,
                            Queue = 1,
                            SeasonId = 4
                        },
                        new
                        {
                            Id = 30,
                            AwayTeamGoals = 1,
                            AwayTeamId = 24,
                            Date = new DateTime(2022, 6, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 3,
                            HomeTeamId = 23,
                            Queue = 1,
                            SeasonId = 4
                        },
                        new
                        {
                            Id = 31,
                            AwayTeamGoals = 2,
                            AwayTeamId = 23,
                            Date = new DateTime(2022, 5, 23, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 5,
                            HomeTeamId = 25,
                            Queue = 2,
                            SeasonId = 4
                        },
                        new
                        {
                            Id = 32,
                            AwayTeamGoals = 0,
                            AwayTeamId = 26,
                            Date = new DateTime(2022, 5, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 25,
                            Queue = 1,
                            SeasonId = 4
                        },
                        new
                        {
                            Id = 33,
                            AwayTeamGoals = 0,
                            AwayTeamId = 25,
                            Date = new DateTime(2022, 5, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 2,
                            HomeTeamId = 24,
                            Queue = 1,
                            SeasonId = 4
                        },
                        new
                        {
                            Id = 34,
                            AwayTeamGoals = 3,
                            AwayTeamId = 26,
                            Date = new DateTime(2022, 11, 11, 18, 15, 0, 0, DateTimeKind.Unspecified),
                            HomeTeamGoals = 1,
                            HomeTeamId = 27,
                            Queue = 1,
                            SeasonId = 4
                        });
                });

            modelBuilder.Entity("FootballLeagueManager.Models.Entities.Main.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeagueId = 1,
                            Name = "2022/2023",
                            StartDate = new DateTime(2022, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeagueId = 2,
                            Name = "2022/2023",
                            StartDate = new DateTime(2022, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2022, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeagueId = 3,
                            Name = "2021/2022",
                            StartDate = new DateTime(2021, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2023, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeagueId = 3,
                            Name = "2022/2023",
                            StartDate = new DateTime(2022, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FootballLeagueManager.Models.Entities.Main.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Belgia",
                            Name = "Genk"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Belgia",
                            Name = "Royale Union SG"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Belgia",
                            Name = "Antwerp"
                        },
                        new
                        {
                            Id = 4,
                            Country = "Belgia",
                            Name = "Club Brugge"
                        },
                        new
                        {
                            Id = 5,
                            Country = "Belgia",
                            Name = "Gent"
                        },
                        new
                        {
                            Id = 6,
                            Country = "Belgia",
                            Name = "St. Liege"
                        },
                        new
                        {
                            Id = 7,
                            Country = "Belgia",
                            Name = "Westerlo"
                        },
                        new
                        {
                            Id = 8,
                            Country = "Belgia",
                            Name = "Cercle Brugge"
                        },
                        new
                        {
                            Id = 9,
                            Country = "Belgia",
                            Name = "Charleroi"
                        },
                        new
                        {
                            Id = 10,
                            Country = "Belgia",
                            Name = "Leuven"
                        },
                        new
                        {
                            Id = 11,
                            Country = "Belgia",
                            Name = "Anderlecht"
                        },
                        new
                        {
                            Id = 12,
                            Country = "Belgia",
                            Name = "St. Truiden"
                        },
                        new
                        {
                            Id = 13,
                            Country = "Belgia",
                            Name = "KV Mechelen"
                        },
                        new
                        {
                            Id = 14,
                            Country = "Belgia",
                            Name = "Kortrijk"
                        },
                        new
                        {
                            Id = 15,
                            Country = "Belgia",
                            Name = "Eupen"
                        },
                        new
                        {
                            Id = 16,
                            Country = "Belgia",
                            Name = "Oostende"
                        },
                        new
                        {
                            Id = 17,
                            Country = "Belgia",
                            Name = "Waregem"
                        },
                        new
                        {
                            Id = 18,
                            Country = "Belgia",
                            Name = "Seraing"
                        },
                        new
                        {
                            Id = 19,
                            Country = "Belgia",
                            Name = "RWDM"
                        },
                        new
                        {
                            Id = 20,
                            Country = "Belgia",
                            Name = "Beveren"
                        },
                        new
                        {
                            Id = 21,
                            Country = "Anglia",
                            Name = "Manchester City"
                        },
                        new
                        {
                            Id = 22,
                            Country = "Anglia",
                            Name = "Liverpool"
                        },
                        new
                        {
                            Id = 23,
                            Country = "Anglia",
                            Name = "Chelsea"
                        },
                        new
                        {
                            Id = 24,
                            Country = "Anglia",
                            Name = "Tottenham"
                        },
                        new
                        {
                            Id = 25,
                            Country = "Anglia",
                            Name = "Arsenal"
                        },
                        new
                        {
                            Id = 26,
                            Country = "Anglia",
                            Name = "Manchester Utd"
                        },
                        new
                        {
                            Id = 27,
                            Country = "Anglia",
                            Name = "West Ham"
                        });
                });

            modelBuilder.Entity("FootballLeagueManager.Models.Entities.Main.TeamSeasonStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Draws")
                        .HasColumnType("int");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<int>("MatchesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TeamSeasonsStats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Draws = 6,
                            Losses = 5,
                            MatchesPlayed = 34,
                            Points = 75,
                            SeasonId = 1,
                            TeamId = 1,
                            Wins = 23
                        },
                        new
                        {
                            Id = 2,
                            Draws = 6,
                            Losses = 5,
                            MatchesPlayed = 34,
                            Points = 75,
                            SeasonId = 1,
                            TeamId = 2,
                            Wins = 23
                        },
                        new
                        {
                            Id = 3,
                            Draws = 6,
                            Losses = 6,
                            MatchesPlayed = 34,
                            Points = 72,
                            SeasonId = 1,
                            TeamId = 3,
                            Wins = 22
                        },
                        new
                        {
                            Id = 4,
                            Draws = 11,
                            Losses = 7,
                            MatchesPlayed = 34,
                            Points = 59,
                            SeasonId = 1,
                            TeamId = 4,
                            Wins = 16
                        },
                        new
                        {
                            Id = 5,
                            Draws = 8,
                            Losses = 10,
                            MatchesPlayed = 34,
                            Points = 56,
                            SeasonId = 1,
                            TeamId = 5,
                            Wins = 16
                        },
                        new
                        {
                            Id = 6,
                            Draws = 7,
                            Losses = 11,
                            MatchesPlayed = 34,
                            Points = 55,
                            SeasonId = 1,
                            TeamId = 6,
                            Wins = 16
                        },
                        new
                        {
                            Id = 7,
                            Draws = 9,
                            Losses = 11,
                            MatchesPlayed = 34,
                            Points = 51,
                            SeasonId = 1,
                            TeamId = 7,
                            Wins = 14
                        },
                        new
                        {
                            Id = 8,
                            Draws = 11,
                            Losses = 10,
                            MatchesPlayed = 34,
                            Points = 50,
                            SeasonId = 1,
                            TeamId = 8,
                            Wins = 13
                        },
                        new
                        {
                            Id = 9,
                            Draws = 6,
                            Losses = 14,
                            MatchesPlayed = 34,
                            Points = 48,
                            SeasonId = 1,
                            TeamId = 9,
                            Wins = 14
                        },
                        new
                        {
                            Id = 10,
                            Draws = 9,
                            Losses = 12,
                            MatchesPlayed = 34,
                            Points = 48,
                            SeasonId = 1,
                            TeamId = 10,
                            Wins = 13
                        },
                        new
                        {
                            Id = 11,
                            Draws = 9,
                            Losses = 12,
                            MatchesPlayed = 34,
                            Points = 46,
                            SeasonId = 1,
                            TeamId = 11,
                            Wins = 13
                        },
                        new
                        {
                            Id = 12,
                            Draws = 9,
                            Losses = 14,
                            MatchesPlayed = 34,
                            Points = 42,
                            SeasonId = 1,
                            TeamId = 12,
                            Wins = 11
                        },
                        new
                        {
                            Id = 13,
                            Draws = 7,
                            Losses = 16,
                            MatchesPlayed = 34,
                            Points = 40,
                            SeasonId = 1,
                            TeamId = 13,
                            Wins = 11
                        },
                        new
                        {
                            Id = 14,
                            Draws = 7,
                            Losses = 19,
                            MatchesPlayed = 34,
                            Points = 31,
                            SeasonId = 1,
                            TeamId = 14,
                            Wins = 8
                        },
                        new
                        {
                            Id = 15,
                            Draws = 7,
                            Losses = 20,
                            MatchesPlayed = 34,
                            Points = 28,
                            SeasonId = 1,
                            TeamId = 15,
                            Wins = 7
                        },
                        new
                        {
                            Id = 16,
                            Draws = 6,
                            Losses = 21,
                            MatchesPlayed = 34,
                            Points = 27,
                            SeasonId = 1,
                            TeamId = 16,
                            Wins = 7
                        },
                        new
                        {
                            Id = 17,
                            Draws = 9,
                            Losses = 19,
                            MatchesPlayed = 34,
                            Points = 27,
                            SeasonId = 1,
                            TeamId = 17,
                            Wins = 6
                        },
                        new
                        {
                            Id = 18,
                            Draws = 5,
                            Losses = 24,
                            MatchesPlayed = 34,
                            Points = 20,
                            SeasonId = 1,
                            TeamId = 18,
                            Wins = 5
                        },
                        new
                        {
                            Id = 19,
                            Draws = 4,
                            Losses = 4,
                            MatchesPlayed = 22,
                            Points = 46,
                            SeasonId = 2,
                            TeamId = 19,
                            Wins = 14
                        },
                        new
                        {
                            Id = 20,
                            Draws = 7,
                            Losses = 3,
                            MatchesPlayed = 22,
                            Points = 43,
                            SeasonId = 2,
                            TeamId = 20,
                            Wins = 12
                        },
                        new
                        {
                            Id = 21,
                            Draws = 6,
                            Losses = 3,
                            MatchesPlayed = 38,
                            Points = 93,
                            SeasonId = 3,
                            TeamId = 21,
                            Wins = 29
                        },
                        new
                        {
                            Id = 22,
                            Draws = 8,
                            Losses = 2,
                            MatchesPlayed = 38,
                            Points = 92,
                            SeasonId = 3,
                            TeamId = 22,
                            Wins = 28
                        },
                        new
                        {
                            Id = 23,
                            Draws = 11,
                            Losses = 6,
                            MatchesPlayed = 38,
                            Points = 74,
                            SeasonId = 3,
                            TeamId = 23,
                            Wins = 21
                        },
                        new
                        {
                            Id = 24,
                            Draws = 5,
                            Losses = 11,
                            MatchesPlayed = 38,
                            Points = 71,
                            SeasonId = 3,
                            TeamId = 24,
                            Wins = 22
                        },
                        new
                        {
                            Id = 25,
                            Draws = 3,
                            Losses = 13,
                            MatchesPlayed = 38,
                            Points = 69,
                            SeasonId = 3,
                            TeamId = 25,
                            Wins = 22
                        },
                        new
                        {
                            Id = 26,
                            Draws = 10,
                            Losses = 12,
                            MatchesPlayed = 38,
                            Points = 58,
                            SeasonId = 3,
                            TeamId = 26,
                            Wins = 16
                        },
                        new
                        {
                            Id = 27,
                            Draws = 5,
                            Losses = 5,
                            MatchesPlayed = 38,
                            Points = 89,
                            SeasonId = 4,
                            TeamId = 21,
                            Wins = 28
                        },
                        new
                        {
                            Id = 28,
                            Draws = 10,
                            Losses = 9,
                            MatchesPlayed = 38,
                            Points = 67,
                            SeasonId = 4,
                            TeamId = 22,
                            Wins = 19
                        },
                        new
                        {
                            Id = 29,
                            Draws = 11,
                            Losses = 16,
                            MatchesPlayed = 38,
                            Points = 44,
                            SeasonId = 4,
                            TeamId = 23,
                            Wins = 11
                        },
                        new
                        {
                            Id = 30,
                            Draws = 6,
                            Losses = 14,
                            MatchesPlayed = 38,
                            Points = 60,
                            SeasonId = 4,
                            TeamId = 24,
                            Wins = 18
                        },
                        new
                        {
                            Id = 31,
                            Draws = 6,
                            Losses = 6,
                            MatchesPlayed = 38,
                            Points = 84,
                            SeasonId = 4,
                            TeamId = 25,
                            Wins = 26
                        },
                        new
                        {
                            Id = 32,
                            Draws = 6,
                            Losses = 9,
                            MatchesPlayed = 38,
                            Points = 75,
                            SeasonId = 4,
                            TeamId = 26,
                            Wins = 23
                        },
                        new
                        {
                            Id = 33,
                            Draws = 7,
                            Losses = 20,
                            MatchesPlayed = 38,
                            Points = 40,
                            SeasonId = 4,
                            TeamId = 27,
                            Wins = 11
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
